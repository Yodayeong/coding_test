#성 지키기

#문제
#영식이는 직사각형 모양의 성을 가지고 있다. 성의 1층은 몇 명의 경비원에 의해서 보호되고 있다. 영식이는 모든 행과 모든 열에 한 명 이상의 경비원이 있으면 좋겠다고 생각했다.
#성의 크기와 경비원이 어디있는지 주어졌을 때, 몇 명의 경비원을 최소로 추가해야 영식이를 만족시키는지 구하는 프로그램을 작성하시오.

#입력
#첫째 줄에 성의 세로 크기 N과 가로 크기 M이 주어진다. N과 M은 50보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에는 성의 상태가 주어진다. 성의 상태는 .은 빈칸, X는 경비원이 있는 칸이다.

#출력
#첫째 줄에 추가해야 하는 경비원의 최솟값을 출력한다.

#이차원 배열 입력
#리스트 컴프리헨션 사용

import sys
sys.stdin = open('0_성지키기.txt', 'r')

N, M = map(int, input().split())
#행렬 입력받기
matrix = [list(input()) for _ in range(N)]

#행을 먼저 체크하고
#행에 경비원이 있으면 넘어가고
#없으면 열도 체크
cnt = 0
for i in range(N):
    if 'X' not in matrix[i]:
        #행을 먼저 체크
        temp = []
        if 'X' not in temp:
            #각 열을 체크
            matrix[0][i] = 'X'
            cnt += 1
        else:
            #열에 'X'가 있는 경우에는 아무데나 X를 하면 됨
            matrix[i][0] = 'X'
            cnt += 1
print(cnt)