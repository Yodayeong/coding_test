#대칭 차집합

#문제
#자연수를 원소로 갖는 공집합이 아닌 두 집합 A와 B가 있다. 이때, 두 집합의 대칭 차집합의 원소의 개수를 출력하는 프로그램을 작성하시오. 두 집합 A와 B가 있을 때, (A-B)와 (B-A)의 합집합을 A와 B의 대칭 차집합이라고 한다.

#예를 들어, A = { 1, 2, 4 } 이고, B = { 2, 3, 4, 5, 6 } 라고 할 때,  A-B = { 1 } 이고, B-A = { 3, 5, 6 } 이므로, 대칭 차집합의 원소의 개수는 1 + 3 = 4개이다.

#입력
#첫째 줄에 집합 A의 원소의 개수와 집합 B의 원소의 개수가 빈 칸을 사이에 두고 주어진다. 둘째 줄에는 집합 A의 모든 원소가, 셋째 줄에는 집합 B의 모든 원소가 빈 칸을 사이에 두고 각각 주어진다. 각 집합의 원소의 개수는 200,000을 넘지 않으며, 모든 원소의 값은 100,000,000을 넘지 않는다.

#출력
#첫째 줄에 대칭 차집합의 원소의 개수를 출력한다.


#set 연산을 적극 활용해준다.

import sys
sys.stdin = open('0_대칭차집합.txt', 'r')

a_len, b_len = map(int, input().split())
#두 집합을 모두 set으로 받아준다.
a = set(map(int, input().split()))
b = set(map(int, input().split()))

#set의 교집합 연산 '&'을 활용해서 두 집합의 교집합을 구해준다.
#이후의 차 연산을 위해 set으로 받아준다.
common_elements = set(a & b)

#각 집합에서 교집합을 빼 준 길이를 더해준다.
print(len(a - common_elements) + len(b - common_elements))